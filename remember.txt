? fro checking a option,
set shiftwidth=4 // to set an option 
set is? 
set hls?        //highlight search 
set number      //number lines 
set shiftwidth  //indent size
set tabstop     //tab indent size
set expandtab   //ie if shiftwidth is 8 and tabstop is 8 and expandtab is off , so if you 
//preformed a right shift operation a tab will be inserted 
//it's better to turn this option on to see the representing spaces in list mode not the tap (^I character)
set list        //if this mode is on, you will see the representing tap shown not the spaces 


the letter x for cutting 
the letter y for copying (yanking)
the letter p for pasting (yanking)
the letter d for deleting 
the letter c for changing 
the letter a for inserting mode 

the letter o for inseting lines
the letter u for undo changes 
the letter ^r redo 
the letter shift+r to replace mode 
the letter r to replace one char 
the letter g for text transformation 
 
the letter j for joining lines 
the letter f for searching 

f + char 
f + char + ; to repeat the same search 
f + char + , to repeat the same search  in reverse 
t + char places the cursor before this matched char in one char 
T + char places the cursor after this matched char in one char 
count + f + char // ie 2fr finds the second match 
dtw delete until the matched w letter 
all of these for the same line 

/and  // search for and word on multiple lines 
n go to the next match 
/and and then change the matches  if you want and then n to go the next match and then , to repeat the replacing 
?to    //to search backward 
pca a word, and put # that moves you to the last match 
pca a word and then put * to find the next match (entire word only)
d /This  //delete until This
"an then /point  //copy from n letter until matches point word 
:s/net/org/g     //replace net with org , g is flag which will match every occurrence on a line 
:1,6s/for/FOR/g   // chang for with FOR from line number 1 to line 5 
.,$       //current line => last line 
%         //all lines in file  or : 1,$ same thing  
:pattern-1/,/pattern-2/s/old/new/g       //ie :Global_Config/,/Local_Config/s/.net/.com/g 
replace .net with .com in this range       //ie 2:  :Local/,$s/net/org/g
//ie 3:  :s#/var/spool#/usr/local#    replace /var/spool with /usr/local 


//all da or ca ... commands can be replaced with di, ca... , so for example da. a stands for   
//all or around, and i stands for inner
das                 //delete a sentence 
daw                 //delete a word
dap                 //delete a paragraph
di[  or di]         //delete what inside an array 
da[  or da]         //delete the array, (with the brackets)
di(  or di)         //delete what inside parentheses
ya<  or ya>         //yank what inside the tag,
dat                 //delete a tag (with its nested tags)
dit                 //delete inner tag, 
di{  or di}         //delete what inside an object 
ca"  or ci' or `    //change what outside or inside '' or "" or `` 

q+reg-char        //start recoding a macro(keystrokes)
q                 //to stop recording macro
@+reg-char        //apply the recorded macro
@@                //repeat the last macro
:27,36normal @d   //apply d macro from 27 to 36 lines 
//to edit registered macro, just paste it from the reg and edit it, and yank it back
//store global macro in .vimrc:  let @d = '0:s/"/'/g^M":;:/<80>kbs/,//^'

df@      //delete until and including @ 
>> or << //shift a line 
>i{      //shift what inside a block 

///// note: for example gv works for linewise and blockwise mode, and other also
-v to start visual mode
V to start linewise visual mode 
ctrl-v start blockwise visual mode // TIP: its greet replacement for shift+ctrl+alt in vscode 
    o                 //moves cursor to the opposite of the highlight 
    iw                //select the word, also there are: ip, as......
    i} or a[ or ....  //to select what outside or inside a block 
    ap                //select a paragraph
    gv                //back to most recent highlighting 
    U                 // make highlighted uppercase, u for lowercase 
    O                 // moves cursor to the opposite highlighted on same line 
    $                 //select until the end of the highlighted text 
    ><                // to shift highlighted text 
    // lowercase i or a dose'nt work in visual mode, only A or I

    //start V, highlight what you want, thane press :  and you will be in the command mode, 
    //so '>,<'  '> is the start and '< is then end of the range, ie you can to append : 
    // s/usa/USA/ to replace usa with USA in those lines 
    // select something with the ^v, go to command mode: , append center, the text will be centered 
    // or center 40 so the text will be centered based on 40 columns 
    //ce is shortcut for center.. left will place the text in the left. le6 will move the text 6 characters 
    //from the beginning, ri or right will move it to right, ri60 will justify it 60 characters from the right.
    //position a text in center, and then if you want replace the white characters with the desired beginning text  
    //so now your centered positioned text will remain in the center 

//to know which character is represented by vim, press ctrl+v than your needed character
// esc key represented by ^[ 
// enter key represented by ^M
// tap key represented by ^I